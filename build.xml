<?xml version="1.0" encoding="utf-8"?>
<project default="compile">

  <!-- 
  build.xml for Mantis issue
  name: Aki Stankoski and Dennis Huynh for CS56, W12 
  edited: Eric Huang for CS56, S13
  -->

  <property environment="env"/> <!-- load the environment variables --> 
  <property name="webRoot" value="${env.HOME}/public_html/cs56" />
  <property name="webBaseUrl" value="http://www.cs.ucsb.edu/~${env.USER}/cs56" />

  <property name="course" value="cs56" />
  <property name="quarter" value="S13" />
  <property name="issueNum" value="0000707" />
  <property name="mainClass" value="edu.ucsb.cs56.projects.misc.map_gui.Run" />

  
  <property name="projectName" value="${course}_${quarter}_${issueNum}" />
  
  <property name="projectPath" value="edu/ucsb/${course}/projects/misc/map_gui" />
  
  <property name="javadocDest" value="${webRoot}/${projectPath}/javadoc" />
  <property name="javadocURL" value="${webBaseUrl}/${projectPath}/javadoc" />
  <property name="javadocLink" value="http://java.sun.com/javase/7/docs/api/" />
  
  <path id="project.class.path">
	<pathelement location="build"/>
	<pathelement location="lib/junit-4.8.2.jar"/>
  </path>
  
  <path id="project.class.path2">
	<pathelement location="lib/junit-4.8.2.jar"/>
  </path>

  <target name="compile" description="compile the code">
    <mkdir dir="build" />
    <javac srcdir="src" destdir="build" debug="true" debuglevel="lines,source"
		includeantruntime="false" >
		<classpath refid="project.class.path" />
    </javac>
  </target>

  <target name="run" depends="compile,jar" description="run the code">
    <java classname="${mainClass}" classpath="dist/${projectName}.jar" 
      fork="true" > 
    </java>
  </target>

  <target name="clean" description="clean up unnecessary directory">
    <delete failonerror="false" verbose="true">
      <fileset dir="build" includes="*.class"/>
    </delete>
    <delete dir="javadoc" quiet="true" />
    <delete dir="dist" quiet="true" />
    <!--
		<delete dir="download" quiet="true" />
    -->
    <delete dir="temp" quiet="true" />
  </target>

  <target name="test" depends="compile" 
	description="run the tests, if there's any">

   <junit haltonerror="no" haltonfailure="no">
       <classpath refid="project.class.path" />

       <batchtest fork="yes">
          <fileset dir="src">
            <!-- this will pick up every class with a name ending in Test -->
            <include name="*Test.java"/>
          </fileset>
       </batchtest>
       <formatter type="plain" usefile="false" /> 
   </junit>
  </target>
  
 <target name="javadoc" depends="compile" description="upload javadoc"> 
 
   <delete dir="javadoc" quiet="true" /> 
   <javadoc  destdir="javadoc" author="true" version="true" use="true" >  
      <fileset dir="src" includes="**/*.java"/>  
      <classpath refid="project.class.path2" />
      <link href="${javadocLink}" />
   </javadoc>

   <!-- delete the old javadoc -->
   <delete quiet="true" dir="${javadocDest}" /> 

   <!-- copy everything you just made to the javadoc destination,
    and then make it readable --> 
 
   <copy todir="${javadocDest}" > 
     <fileset dir="javadoc"/> 
   </copy> 
 
   <!-- Note: this only does the chmod command on the 
        javadoc subdirectory and its contents.  You MIGHT have to
	MANUALLY do the chmod on the parent directories.  However,
	you should only need to do that once. --> 
 
   <chmod dir="${javadocDest}" perm="755"  type="dir" includes="**" /> 
   <chmod dir="${javadocDest}" perm="755"  type="file" includes="**/*" /> 
   <echo>Javadoc deployed to ${javadocURL}</echo> 

 </target>

 <target name="jar" depends="compile" description="copy the image 
	from images folder to build folder">
   
  <copy todir="build">
    <fileset dir="images"/> 
  </copy>


    <mkdir dir="dist" /> 
	<jar destfile="dist/${projectName}.jar" basedir="build" includes="**/*" >
       <manifest>
         <attribute name="Main-Class" value="${mainClass}"/>
       </manifest>
   </jar>
 </target>

<target name="linenumbers" description="Creates a file containing all source files with line numbers">               
   <exec executable="bash">                                                                                          
     <arg value="-c"/>                                                                                               
     <arg value='tree -ifQ src | grep \.java\"$ | xargs pr -n > numberedsource.txt'/>                                
   </exec>                                                                                                           
</target> 



</project>
